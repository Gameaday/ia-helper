name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-artifacts:
    name: Build Development Artifacts
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v5
      with:
        fetch-depth: 0  # Fetch all history for version info
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        cache: 'gradle'
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.0'
        channel: 'stable'
        cache: true
    
    - name: Get dependencies
      run: flutter pub get
    
    - name: Build Android Development APK
      run: |
        flutter build apk --debug --flavor development
      env:
        GRADLE_OPTS: -Xmx4g -Dorg.gradle.daemon=false
    
    - name: Build Web
      run: |
        flutter build web --release --base-href /ia-helper/
    
    - name: Get build info
      id: build-info
      run: |
        # Get version from pubspec.yaml
        VERSION=$(grep '^version:' pubspec.yaml | cut -d' ' -f2 | tr -d '\r')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Get git commit info
        COMMIT_SHA=$(git rev-parse --short HEAD)
        echo "commit_sha=$COMMIT_SHA" >> $GITHUB_OUTPUT
        
        COMMIT_MSG=$(git log -1 --pretty=%B | head -n1)
        echo "commit_msg=$COMMIT_MSG" >> $GITHUB_OUTPUT
        
        # Get build timestamp
        BUILD_TIME=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
        echo "build_time=$BUILD_TIME" >> $GITHUB_OUTPUT
        
        # Get APK size
        APK_SIZE=$(ls -lh build/app/outputs/flutter-apk/app-development-debug.apk | awk '{print $5}')
        echo "apk_size=$APK_SIZE" >> $GITHUB_OUTPUT
    
    - name: Generate checksums
      run: |
        cd build/app/outputs/flutter-apk
        sha256sum app-development-debug.apk > app-development-debug.apk.sha256
    
    - name: Create artifacts directory
      run: |
        mkdir -p github-pages/artifacts/android/development
        mkdir -p github-pages/artifacts/web
        
        # Copy Android APK
        cp build/app/outputs/flutter-apk/app-development-debug.apk github-pages/artifacts/android/development/
        cp build/app/outputs/flutter-apk/app-development-debug.apk.sha256 github-pages/artifacts/android/development/
        
        # Copy web build
        cp -r build/web/* github-pages/artifacts/web/
    
    - name: Generate build manifest
      run: |
        cat > github-pages/artifacts/manifest.json << EOF
        {
          "version": "${{ steps.build-info.outputs.version }}",
          "buildTime": "${{ steps.build-info.outputs.build_time }}",
          "commitSha": "${{ steps.build-info.outputs.commit_sha }}",
          "commitMessage": "${{ steps.build-info.outputs.commit_msg }}",
          "branch": "main",
          "buildType": "development",
          "artifacts": {
            "android": {
              "development": {
                "fileName": "app-development-debug.apk",
                "size": "${{ steps.build-info.outputs.apk_size }}",
                "path": "artifacts/android/development/app-development-debug.apk",
                "checksumFile": "artifacts/android/development/app-development-debug.apk.sha256"
              }
            },
            "web": {
              "path": "artifacts/web",
              "url": "https://${{ github.repository_owner }}.github.io/ia-helper/"
            }
          },
          "repository": "${{ github.repository }}",
          "runId": "${{ github.run_id }}",
          "runNumber": "${{ github.run_number }}"
        }
        EOF
    
    - name: Upload artifact for pages
      uses: actions/upload-artifact@v4
      with:
        name: github-pages-content
        path: github-pages/

  deploy:
    name: Deploy to GitHub Pages
    needs: build-artifacts
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v5
    
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: github-pages-content
        path: _site
    
    - name: Copy static pages
      run: |
        # Copy the index.html and other static files
        cp -r docs/github-pages/* _site/ || true
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: '_site'
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
