name: CI/CD - Flutter Mobile & Web

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [published]

concurrency:
  group: flutter-${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  analyze:
    name: Analyze & Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.0'
        channel: 'stable'
        cache: true
    
    - name: Cache Flutter dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.pub-cache
          .dart_tool
        key: flutter-deps-${{ runner.os }}-${{ hashFiles('pubspec.yaml') }}
        restore-keys: |
          flutter-deps-${{ runner.os }}-
    
    - name: Get dependencies
      run: flutter pub get
    
    - name: Analyze
      run: flutter analyze --no-fatal-infos
    
    - name: Test
      run: flutter test --no-pub

  build-android:
    name: Build Android APK & AAB
    runs-on: ubuntu-latest
    needs: analyze
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        cache: 'gradle'
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.0'
        channel: 'stable'
        cache: true
    
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          android/.gradle
        key: gradle-${{ runner.os }}-${{ hashFiles('android/gradle/wrapper/gradle-wrapper.properties', 'android/build.gradle', 'android/app/build.gradle') }}
        restore-keys: |
          gradle-${{ runner.os }}-
    
    - name: Cache Flutter build
      uses: actions/cache@v4
      with:
        path: |
          .dart_tool
          build
        key: flutter-build-${{ runner.os }}-${{ hashFiles('pubspec.yaml') }}
        restore-keys: |
          flutter-build-${{ runner.os }}-
    
    - name: Get dependencies
      run: flutter pub get
    
    - name: Stop Gradle daemons and clean
      run: |
        # Stop any running Gradle daemons to clear file watchers
        cd android && ./gradlew --stop || true
        cd ..
        # Clean Flutter build artifacts
        flutter clean
    
    - name: Build APK and AAB (optimized)
      run: |
        # Build both APK and AAB with production flavor:
        # APK: For direct download, sideloading, testing
        # AAB: For Google Play Store submission (required format)
        # --flavor production: Explicitly use production product flavor
        # --no-tree-shake-icons: Skip font tree-shaking to save build time
        # --release: Production build with optimizations
        flutter build apk --release --flavor production --no-tree-shake-icons
        flutter build appbundle --release --flavor production --no-tree-shake-icons
      env:
        # Gradle JVM memory settings to prevent OOM during native lib processing
        # GitHub Actions runners have 7GB RAM, allocate 4GB to Gradle JVM
        # daemon=false: Prevents "Already watching path" errors from stale file watchers
        GRADLE_OPTS: -Xmx4g -Xms512m -XX:MaxMetaspaceSize=1024m -XX:+UseG1GC -Dorg.gradle.daemon=false -Dorg.gradle.parallel=false -Dorg.gradle.caching=true
        JAVA_OPTS: -Xmx4g -Xms512m
    
    - name: List build outputs
      working-directory: build/app/outputs
      run: |
        echo "=== Listing build outputs ==="
        find . -name "*.apk" -o -name "*.aab"
        echo "=== Directory structure ==="
        ls -R
    
    - name: Generate checksums
      working-directory: build/app/outputs
      run: |
        # Find actual APK and AAB files and generate checksums
        find . -name "*.apk" -type f -exec sh -c 'sha256sum "$1" > "$1.sha256"' _ {} \;
        find . -name "*.aab" -type f -exec sh -c 'sha256sum "$1" > "$1.sha256"' _ {} \;
    
    - name: Upload APK and AAB
      uses: actions/upload-artifact@v4
      with:
        name: ia-helper-android
        path: |
          build/app/outputs/**/*.apk
          build/app/outputs/**/*.apk.sha256
          build/app/outputs/**/*.aab
          build/app/outputs/**/*.aab.sha256
        retention-days: 30


  # Note: Web build and GitHub Pages deployment is now handled by deploy-github-pages.yml
  # This avoids duplication and ensures a single, streamlined deployment process

  release:
    name: Upload to Release
    runs-on: ubuntu-latest
    needs: [build-android]
    if: github.event_name == 'release'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Upload to release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/ia-helper-android/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

